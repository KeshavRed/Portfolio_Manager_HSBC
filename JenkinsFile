pipeline {
    agent any

    environment {
        NODE_ENV = 'production'
        PORT = '5000'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/KeshavRed/Portfolio_Manager_HSBC.git', branch: 'master'
                echo 'Repository cloned successfully'
            }
        }

        stage('Environment Setup') {
            steps {
                bat 'node -v'
                bat 'npm -v'
                echo 'Node.js environment verified'
            }
        }

        stage('Install Dependencies') {
            parallel {
                stage('Server Dependencies') {
                    steps {
                        bat 'cd server && npm install'
                        echo 'Server dependencies installed'
                    }
                }
                stage('Client Dependencies') {
                    steps {
                        bat 'cd client && npm install'
                        echo 'Client dependencies installed'
                    }
                }
                stage('Global Dependencies') {
                    steps {
                        bat 'npm install -g pm2'
                        echo 'PM2 installed globally'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    bat 'cd server && npm test -- --ci --watchAll=false --passWithNoTests --verbose'
                }
                echo 'Tests completed successfully'
            }
        }

        stage('Build Application') {
            steps {
                bat 'cd client && npm run build'
                echo 'Client application built successfully'
            }
        }

        stage('Deploy with PM2') {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                script {
                    bat 'pm2 delete all || echo "No existing processes to delete"'
                    bat 'pm2 start eco.config.js'
                    bat 'pm2 list'
                }
                echo 'Application deployed with PM2'
            }
        }

        stage('Health Check') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    script {
                        bat 'ping -n 5 127.0.0.1 > nul'
                        bat 'pm2 status'
                    }
                }
                echo 'Health check completed'
            }
        }
    }

    post {
        always {
            bat 'pm2 save --force'
            echo 'PM2 configuration saved'
        }
        success {
            echo '✅ Build successful! Portfolio Management application is running via PM2'
            bat 'pm2 list'
        }
        failure {
            echo '❌ Build failed! Check logs for details'
            bat 'pm2 logs --lines 20 || echo "No PM2 logs available"'
        }
        cleanup {
            echo 'Pipeline cleanup completed'
        }
    }
}